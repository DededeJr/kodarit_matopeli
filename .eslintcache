[{"C:\\Users\\mirov\\kodarit_matopeli\\src\\index.js":"1","C:\\Users\\mirov\\kodarit_matopeli\\src\\App.js":"2","C:\\Users\\mirov\\kodarit_matopeli\\src\\SnakeBoard.js":"3","C:\\Users\\mirov\\kodarit_matopeli\\src\\utils.js":"4","C:\\Users\\mirov\\kodarit_matopeli\\src\\Points.js":"5"},{"size":447,"mtime":1615907905524,"results":"6","hashOfConfig":"7"},{"size":504,"mtime":1617720894629,"results":"8","hashOfConfig":"7"},{"size":3372,"mtime":1617721978540,"results":"9","hashOfConfig":"7"},{"size":873,"mtime":1617115811026,"results":"10","hashOfConfig":"7"},{"size":152,"mtime":1617720639768,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1dzs66b",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mirov\\kodarit_matopeli\\src\\index.js",[],["24","25"],"C:\\Users\\mirov\\kodarit_matopeli\\src\\App.js",[],"C:\\Users\\mirov\\kodarit_matopeli\\src\\SnakeBoard.js",["26"],"C:\\Users\\mirov\\kodarit_matopeli\\src\\utils.js",["27"],"import {useEffect, useRef} from \"react\";\r\n/*\r\nJaetaan tämä pätkä oppilaille pastebiniin https://pastebin.com/\r\nThanks Dan Abramov for useInterval hook\r\nhttps://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\nThis useInterval Hook sets up an interval and clears it after unmounting.\r\nIt’s a combo of setInterval and clearInterval tied to the component lifecycle.\r\n*/\r\nexport const useInterval = (callback, delay) => {\r\n  const savedCallback = useRef();\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      setInterval(id);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay, setInterval]);\r\n};\r\n","C:\\Users\\mirov\\kodarit_matopeli\\src\\Points.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":33,"column":5,"nodeType":"34","messageId":"35","endLine":46,"endColumn":6},{"ruleId":"36","severity":1,"message":"37","line":25,"column":6,"nodeType":"38","endLine":25,"endColumn":26,"suggestions":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'setInterval'. Either exclude it or remove the dependency array. Outer scope values like 'setInterval' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},"Update the dependencies array to be: [delay]",{"range":"45","text":"46"},[839,859],"[delay]"]